/* https://leetcode-cn.com/problems/building-boxes/
 * 1739. Building Boxes
 * 题意：在一个n*n*n的房间中，放置n个1*1的方块。盒子可以放在地面任何位置，如果x要放在y的上方，则y的四个侧面都必须与其他啊方块或者墙相邻。
 * 问最少接触地面的盒子数量？
 * 题解：解法1：贪心+二分高度或者层数。解法2：贪心+解方程
 * 解法2：如题目图中所示，当n比较小是，可以看出，按照墙角排排进行堆放是最优的。
 *      只要我们证明按照这种堆法，地面个数确定时，其上一层能够堆放的方块最多，那么其上所有层可堆放所有方块数就是最多的。
 *      因此我们只需证明按照这种堆法，地面方块数确定时，这种堆法中四个竖直面存在不被覆盖的的方块数最少。下面来证明
 *      1.首先我们可以假设只有一个连通分量，且方块不和右边和下边的墙接触。
 *          因为如果我们能证明上面堆放方式最优，则对于每个连通分量，其分别达到最优值，都没有堆在一起得到的更优。
 *      2.当地面方块数确定且满足1时，对于一种最优方案，可以将每个方块都往上移动到不能再移动为止，则得到的堆放方式不会变差。
 *          这是因为对于每一列如果其有t个方块四个面被覆盖，说明其左边的列和右边的列都至少有t个方块或者是墙。当分别网上移动时，这一列至少有t个四面被覆盖的方块，所以堆放方式不会变差。同理，也可再将方块分别往左移动。
 *      在经过2操作后，选择最优方案中，第一行方块数最少的，如果第一行一样多，则取第二行最少的，以此类推。设这个最优方案为P
 *      3.方案P，经过2操作后可以快速得到结论：
 *               每一行方块数不会少于下一行，每一列方块数不会小于小一列。同时每一行/列方块数不会多于下一行一个以上。
 *      设第i行的方块数为xi，第i列方块数为yi，则地面方块总数为x1 + x2 + ...xr = y1 + ... + yc。
 *          四面都被覆盖的方块数为x2 + ... + xr = y2 + ... + yc。边缘方块数为x1 = y1 = r = c。
 *      4.x1 = y1 = r = c说明至多有一行或者一列具有相同的方块数。这说明P就是上面的这种堆法
 *      
 *      证明了这种堆法的最优性。接着解决计算的问题。先求中间的直角堆的方块数，以及高度h。
 *          方块数等于1 + (1 + 2) + (1 + 2 + 3) + ... + (1 + ... + h)。
 *      接着计算剩下的方块数目remain。假设remain个中N个放最底层，则可以堆放的方块数为 1 + 2 + ... + N。所以(N(N+1)/2 >= remain)
 *      解方程x^2 + x - 2remain = 0，x = (-1 + sqrt(1 + 8remain)) / 2。 所以最小的N = ceil(x)。有了这些就可以计算地面方块数       
 *          
 *      
 */
class Solution {
public:
    int minimumBoxes(int n) {
        int sum = 0;
        int tmp = 0;
        int height = 1;
        for (; sum <= n; ++height) {
            tmp += height;
            sum += tmp;
        }
        height--;
        int remain = n - sum + tmp;
        return tmp - height + ceil((sqrt(1 + 8 * remain) - 1) / 2);

    }
};